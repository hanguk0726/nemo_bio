[AvatarVision]
title = "Avatar Vision"
description = { kor = "ffmpeg 없이 flutter와 rust로 만든 영상 일기 앱.", eng = "A video diary app written in flutter and rust without ffmpeg" }
keyword = ["windows", "encoding", "decoding", "mp4"]
techStacks = ["flutter", "rust"]
personal = true
links = ["https://github.com/hanguk0726/Avatar-Vision", "https://medium.com/@hangukshin/building-a-video-diary-app-written-in-flutter-and-rust-without-ffmpeg-8eb97a97fb49"]
date = { startMonth = 2, startYear = 2023, endMonth = 5, endYear = 2023 }
article = { kor = '''영화 아바타의 한 장면에서 영감을 받아 이 앱을 만들었습니다.
이 앱은 SF UI/UX를 제공하고 사용자에게 비디오 일기 기능을 제공합니다.
웹캠과 마이크 장치의 입력을 디코딩하여 사용자에게 표시하고, 데이터를 MP4 형식으로 muxing하는 데 필요한 단계를 처리합니다.
모든 세부 사항은 아래에 링크된 Medium 아티클에서 찾을 수 있습니다.''', eng = '''I created this app after being inspired by a scene from the movie Avatar.
The app has a sci-fi UI/UX and provides users with a video diary function.
It decodes input from the webcam and microphone devices, displaying it to the user,
and processes the necessary steps to mux the data into an MP4 format.
You can find all the details in the Medium article linked below.'''}

[Plantimer]
title = "Plantimer"
description = { kor = "프로그레스 바 형태의 타이머 스케쥴러", eng = "Timer schedulers with progress bar"}
keyword = ["android", "background task", "animation", "timer"]
techStacks = ["flutter", "kotlin"]
personal = true
links = ["https://play.google.com/store/apps/details?id=com.nemo.plantimer"]
date = { startMonth = 9, startYear = 2021, endMonth = 10, endYear = 2021 }
article = { kor = '''당시 저는 멋지고 인상적인 사용자 인터페이스를 만드는 것에 빠져있었습니다.
그리고 저는 개인적으로 자체 생산성 앱을 출시하고 싶었습니다.
멋진 프로그레스 바가 아래로 이동하는 타이머를 만드는 아이디어를 가지고 있었습니다.
이 앱을 사용하면 사용자는 타이머로 일련의 작업을 예약할 수 있습니다.
타이머가 시작되면 사용자는 시각적으로 프로그레스 바룰 볼 수 있습니다.
앱을 닫더라도 사용자는 알림을 통해 타이머와 작업을 계속 볼 수 있습니다.
이 앱은 아래의 링크를 사용하여 Play 스토어에서 찾을 수 있습니다.''', eng = '''Back then, I was really fascinated by creating a cool and impressive user interface.
And I also had a personal desire to launch my own productivity app.
I had this idea of making a timer that shows a fancy progress bar moving down.
With this app, users can schedule a series of tasks as a timer.
When the timer starts, a user will see a visually appealing progress bar.
Even if they close the app, a user can still see the timer and tasks through notifications.
You can now find this app on the Play Store using the link below.'''}

[RealtimeChat]
title = "Realtime Chat"
description = { kor = "다중 채널의 다중 채팅 앱", eng = "Multi-Channel Multi-Chat Service"}
keyword = ["web", "websocket", "chat"]
techStacks = ["go", "reactJs", "cassandra"]
personal = true
links = []
date = { startMonth = 1, startYear = 2021, endMonth = 2, endYear = 2021 }
article = { kor = '''저는 실시간으로 메시지를 처리하는 서비스를 만들고자 했습니다.
그래서 여러 채널에서 여러 사람들과 채팅할 수 있는 실시간 메시징 플랫폼을 개발했습니다.
이 채널은 웹소켓 풀을 이용하여 관리되며, 메시지의 읽음 상태를 추적합니다.
회원가입 및 로그인 과정을 간편하게 만들기 위해 비밀번호 없이 매직 링크 방식을 구현했습니다.''', eng = '''I wanted to create a service that processed messages in real time.
So, I developed a real-time messaging platform that allows users to chat with multiple people on different channels.
The channels are managed using a websocket pool, and the service also tracks the read status of messages.
To make the sign-in/sign-up process simpler, I implemented a passwordless and magic link method.'''}

[StrawberryDays]
title = "Strawberry Days"
description = { kor = "가수 윤하의 팬사이트", eng = "A fan site for singer Younha"}
keyword = ["web", "scraping"]
techStacks = ["django", "vueJs", "postgreSQL"]
personal = true
links = []
date = { startMonth = 11, startYear = 2020, endMonth = 12, endYear = 2020 }
article = { kor = '''저는 중학교 때부터 가수 윤하의 팬이었습니다.
그래서 그녀의 팬 사이트를 만들었습니다.
이 사이트에서 사용자는 YouTube, Twitter, Instagram에서의 윤하의 최신 업데이트를 쉽게 확인하고, 모든 앨범의 트랙, 이미지, 음악 비디오 링크를 찾을 수 있습니다.
팬들이 게시물과 댓글을 남길 수 있는 커뮤니티 기능도 있습니다.''', eng =  '''Ever since I was in middle school, I've been a fan of the singer Younha.
So I made a fan site of her. On the site, a user can easily access Younha's latest updates from YouTube, Twitter, and Instagram and 
can explore her albums and find tracks, images, and links to her music videos.
The fan site also includes a community feature where fans can write posts and leave comments.'''}

[Togispace]
title = "Togispace"
description = { kor = "식단과 음식에 대한 커머스 앱", eng = "A commercial app for diet and food"}
keyword = ["android", "jetpack compose"]
techStacks = ["kotlin"]
personal = false
links = ["https://play.google.com/store/apps/details?id=co.togi.togispace"]
date = { startMonth = 1, startYear = 2022, endMonth = 2, endYear = 2023 }
article = { kor = '''저는 Android 개발자 역할로서 1년 2개월 동안 말그대로 혼자서 이 프로젝트를 개발하고 운영했습니다.
빠른 템포의 개발 과정에서 앱은 여러 번의 변경을 거쳤고, 그 중에는 몇 가지 크고 중요한 전환도 포함되었습니다.
저는 이 앱의 개발 과정이 Jetpack Compose와 Android에서의 주제들을 광범위하게 다루었다고 생각합니다.
앱 개발에는 캘린더, cropper 도구, 틴더 같은 스와이프 위젯, 드래그 앤 드롭 기능, 중첩 스크롤링과 탭이 있는 기타 복잡한 위젯 등 다양한 구성 요소가 포함되어 있습니다. 아키텍처는 클린 아키텍처 원칙을 따랐고, 이벤트 기반 시스템을 활용했으며, 반응형 프로그래밍을 통합했습니다.
성능 최적화를 위해 이미지나 네트워크 데이터 등을 캐싱했습니다. 또한 앱은 국제화, 웹뷰 통합, 카메라 기능, PDF 처리, 다중 모듈 시스템, 인증 등을 지원했습니다.
당시 저는 Jetpack Compose와 Android 개발을 정말 즐겼습니다. iOS 개발에 사용되는 TCA(The Composable Architecture)에서 영감을 얻어 앱의 상태 관리를 지속적으로 개선했습니다.
이 프로젝트에서 저는 회사 수준에서 다른 역할 그룹과 협력하면서 프로덕트의 생명 주기를 전체로 경험했습니다.
아래의 링크를 통해 Play 스토어에서 앱을 확인해 보세요.''', eng = '''I developed and ran this project from scratch as an Android developer for a year and two months, literally all alone.
During the fast-paced development process, the app went through multiple changes, including several significant pivots. I believe the app covered a wide range of topics of Jetpack Compose and Android app development.
The app included various components like a calendar, cropper, swipe widget like tinder, drag and drop functionality, and other complex widgets with nested scrolling and tabs, among others. The architecture followed clean architecture principles, utilized event-driven systems, and incorporated reactive programming.
I cached network data and images for performance optimization. Additionally, the app supported internationalization, webview integration, camera functionality, PDF handling, a multi-module system, authentication, and more.
At that time, I really enjoyed working with Jetpack Compose and Android development. I continuously focused on enhancing the app's state management, drawing inspiration from TCA (The Composable Architecture) used in iOS development and the latest Android resources.
This project allowed me to experience the entire product lifecycle while collaborating with other role groups at a company level.
check out the app on the Play Store using the link below.'''}

[Snaptag]
title = "Snaptag"
description = { kor = "눈에 안보이는 QR코드를 인식하는 카메라 앱", eng = "An app scanning invisible QR code with camera"}
keyword = ["android", "jni"]
techStacks = ["kotlin", "java"]
personal = false
links = []
date = { startMonth = 3, startYear = 2021, endMonth = 6, endYear = 2021 }
article = { kor = '''이 앱은 안드로이드 카메라로 촬영된 픽셀에서 미리 적용해둔 특정 정보를 얻습니다.
제 역할은 안드로이드 카메라 파트를 최적화하여 픽셀 캡처에서 정보 추출까지의 과정을 최적화 하는 것이었습니다.
캡처된 카메라 프레임은 JNI를 통해 연결된 C++ 모듈로 전달됩니다.
이 앱 개발한 것은 안드로이드 카메라 기능에 대한 깊은 분석을 할 수 있는 귀중한 경험이었습니다.
이 경험은 나중에 제가 아바타 비전 프로젝트를 시작하는데 영향을 주었습니다.''', eng = '''This app extracts certain information from pixels captured by an Android camera.
My role was to optimize the Android camera module to improve the process from pixel capture to information extraction.
The captured camera frame is passed to a C++ module connected via JNI.
Developing this app was a valuable experience that allowed me to analyze the Android camera features in depth.
This experience influenced me to start the Avatar Vision project later.'''}

[Openshy4J]
title = "Openshy4j"
description = { kor = "Openstack의 웹 컨트롤러", eng = "A web controller for Openstack"}
keyword = ["web", "openstack", "spring boot"]
techStacks = ["java"]
personal = false
links = []
date = { startMonth = 9, startYear = 2020, endMonth = 9, endYear = 2020 }
article = { kor = '''오픈스택 프로젝트는 규모나 복잡성 등에서 저에게 강한 첫 인상을 남겼으며 인프라 측면을 탐색할 수 있는 좋은 기회를 제공했습니다.
우리 팀은 Spring과 openstack4j 키트를 사용하여 OpenStack 웹 컨트롤러를 개발했습니다.
이 웹 인터페이스를 통해 사용자는 openstack API로 인스턴스를 생성하고 관리할 수 있습니다.
프로젝트에서 저는 스프링 작업을 메인으로 담당했습니다.''', eng = '''The OpenStack project has left a strong impression on me in terms of its scale and complexity,
and it provided me with a good opportunity to explore the infrastructure side.
Our team developed an OpenStack web controller using Spring and the openstack4j kit.
Through this web interface, users can create and manage instances with the OpenStack API.
In the project, I was mainly responsible for the Spring work.'''}

[FiveStarRecipe]
title = "Fivestar recipe"
description = { kor = "레시피를 제공하는 웹사이트", eng = "A webstie that provides recipes"}
keyword = ["web", "springMVC"]
techStacks = ["java", "vueJs"]
personal = false
links = []
date = { startMonth = 2, startYear = 2020, endMonth = 3, endYear = 2020 }
article = { kor = '''이것은 요리 레시피 웹사이트입니다.
우리 팀은 북마크, 로그인, 검색 및 순위 시스템 등의 당시의 우리가 상상할 수 있는 재미있는 기능들을 만들었습니다.
저는 Spring MVC와 Vue.js 파트를 개발했습니다.''', eng = '''This is a cooking recipe website.
We created fun features that we could imagine at that time, such as bookmarks, logins, search, and ranking systems.
I developed both the Spring MVC and Vue.js parts.'''}

[BlueMarble]
title = "Blue Marble"
description = { kor = "부루마블 게임", eng = "A game like Monopoly"}
keyword = ["game", "terminal"]
techStacks = ["java"]
personal = false
links = []
date = { startMonth = 12, startYear = 2019, endMonth = 12, endYear = 2019 }
article = { kor = '''이건 제가 자바를 배운 후 처음으로 작업한 프로젝트였습니다.
부루마블에서의 기능을 가능한 한 많이 포함하는 것을 목표로했습니다.
각 차례마다 주사위를 굴리고 우주선이나 무인도, 황금열쇠 등의 변수와 함께 게임 말을 이동하여 취할 행동을 결정할 수 있습니다.
처음에 예상했던 것 보다 커버해야하는 시나리오가 훨씬 많아서 당황하면서도 재밌게 개발했던 기억이 있습니다.
팀원은 터미널에 게임판을 그리는데 집중했고 저는 게임의 로직를 개발하는데 집중했습니다.''', eng = '''This was the first project I worked on after learning Java.
I aimed to include as many features from the original game(Monoploy) as possible.
Each turn, you can roll the dice and move the game piece, and then decide what action to take, along with variables such as spaceships, deserted islands, and golden keys.
I remember being surprised and having fun developing it, as there were many more scenarios to cover than I had originally expected.
My team member focused on drawing the game board on the terminal, and I focused on developing the logic of the game.'''}
